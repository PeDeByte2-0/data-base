-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_admin
(
    user_id integer NOT NULL,
    CONSTRAINT tb_admin_pkey PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_available_time
(
    member_id integer NOT NULL,
    hours_id integer NOT NULL,
    scheduled boolean NOT NULL
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_hours
(
    id_hours integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    weekday character varying(45) COLLATE pg_catalog."default" NOT NULL,
    starttime character varying(45) COLLATE pg_catalog."default" NOT NULL,
    endtime character varying(45) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tb_hours_pkey PRIMARY KEY (id_hours)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_login
(
    id_login integer NOT NULL,
    email character varying(60) COLLATE pg_catalog."default" NOT NULL,
    token character varying(500) COLLATE pg_catalog."default" NOT NULL,
    salt character varying(45) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tb_login_pkey PRIMARY KEY (id_login)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_member
(
    person_id integer NOT NULL,
    obs text COLLATE pg_catalog."default",
    CONSTRAINT tb_member_pkey PRIMARY KEY (person_id)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_necessity
(
    student_id integer NOT NULL,
    speciality_id integer NOT NULL,
    active boolean NOT NULL DEFAULT true,
    CONSTRAINT tb_necessity_pkey PRIMARY KEY (student_id, speciality_id)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_person
(
    id_person integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    active boolean NOT NULL,
    school_id integer NOT NULL,
    CONSTRAINT tb_person_pkey PRIMARY KEY (id_person)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_person_data
(
    person_id integer NOT NULL,
    first_name character varying(45) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(45) COLLATE pg_catalog."default" NOT NULL,
    cpf character varying(45) COLLATE pg_catalog."default" NOT NULL,
    celular character varying(45) COLLATE pg_catalog."default" NOT NULL,
    celular_2 character varying(45) COLLATE pg_catalog."default",
    responsavel character varying(45) COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_professional
(
    member_id integer NOT NULL,
    speciality_id integer NOT NULL,
    CONSTRAINT tb_professional_pkey PRIMARY KEY (member_id)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_scheduled
(
    id_scheduled serial NOT NULL,
    student_id integer NOT NULL,
    professional_id integer NOT NULL,
    hours_id integer NOT NULL,
    scheduled boolean NOT NULL,
    observacao text COLLATE pg_catalog."default",
    CONSTRAINT tb_scheduled_pkey PRIMARY KEY (id_scheduled)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_school
(
    id_school integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    week_profile_id integer NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tb_school_pkey PRIMARY KEY (id_school, week_profile_id),
    CONSTRAINT tb_school_id_school_key UNIQUE (id_school)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_speciality
(
    id_speciality integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(45) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tb_speciality_pkey PRIMARY KEY (id_speciality)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_student
(
    member_id integer NOT NULL,
    CONSTRAINT tb_student_pkey PRIMARY KEY (member_id)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_user
(
    person_id integer NOT NULL,
    username character varying(45) COLLATE pg_catalog."default" NOT NULL,
    login_id integer NOT NULL,
    CONSTRAINT tb_user_pkey PRIMARY KEY (person_id),
    CONSTRAINT unique_login_id UNIQUE (login_id)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_week_profile
(
    id_week_profile integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tb_week_profile_pkey PRIMARY KEY (id_week_profile)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_week_profile_has_tb_hours
(
    week_profile_id integer NOT NULL,
    hours_id integer NOT NULL,
    CONSTRAINT tb_week_profile_has_tb_hours_pkey PRIMARY KEY (week_profile_id, hours_id)
);

ALTER TABLE IF EXISTS "PeDeByteSchema".tb_admin
    ADD CONSTRAINT fk_tb_admin_tb_user1 FOREIGN KEY (user_id)
    REFERENCES "PeDeByteSchema".tb_user (person_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS tb_admin_pkey
    ON "PeDeByteSchema".tb_admin(user_id);


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_available_time
    ADD CONSTRAINT fk_tb_available_time_hours FOREIGN KEY (hours_id)
    REFERENCES "PeDeByteSchema".tb_hours (id_hours) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_available_time
    ADD CONSTRAINT fk_tb_available_time_member FOREIGN KEY (member_id)
    REFERENCES "PeDeByteSchema".tb_member (person_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_member
    ADD CONSTRAINT "fk_Member_tb_person1" FOREIGN KEY (person_id)
    REFERENCES "PeDeByteSchema".tb_person (id_person) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS tb_member_pkey
    ON "PeDeByteSchema".tb_member(person_id);


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_necessity
    ADD CONSTRAINT fk_tb_necessity_tb_speciality FOREIGN KEY (speciality_id)
    REFERENCES "PeDeByteSchema".tb_speciality (id_speciality) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_necessity
    ADD CONSTRAINT fk_tb_necessity_tb_student FOREIGN KEY (student_id)
    REFERENCES "PeDeByteSchema".tb_student (member_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_person
    ADD CONSTRAINT fk_tb_person_tb_school1 FOREIGN KEY (school_id)
    REFERENCES "PeDeByteSchema".tb_school (id_school) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_person_data
    ADD CONSTRAINT fk_tb_person_data_tb_person1 FOREIGN KEY (person_id)
    REFERENCES "PeDeByteSchema".tb_person (id_person) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_professional
    ADD CONSTRAINT fk_tb_professional_tb_member1 FOREIGN KEY (member_id)
    REFERENCES "PeDeByteSchema".tb_member (person_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS tb_professional_pkey
    ON "PeDeByteSchema".tb_professional(member_id);


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_professional
    ADD CONSTRAINT fk_tb_professional_tb_speciality1 FOREIGN KEY (speciality_id)
    REFERENCES "PeDeByteSchema".tb_speciality (id_speciality) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_scheduled
    ADD CONSTRAINT fk_hours FOREIGN KEY (hours_id)
    REFERENCES "PeDeByteSchema".tb_hours (id_hours) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_scheduled
    ADD CONSTRAINT fk_professional FOREIGN KEY (professional_id)
    REFERENCES "PeDeByteSchema".tb_professional (member_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_scheduled
    ADD CONSTRAINT fk_student FOREIGN KEY (student_id)
    REFERENCES "PeDeByteSchema".tb_student (member_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_school
    ADD CONSTRAINT fk_tb_school_tb_week_profile1 FOREIGN KEY (week_profile_id)
    REFERENCES "PeDeByteSchema".tb_week_profile (id_week_profile) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_student
    ADD CONSTRAINT fk_tb_student_tb_member1 FOREIGN KEY (member_id)
    REFERENCES "PeDeByteSchema".tb_member (person_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS tb_student_pkey
    ON "PeDeByteSchema".tb_student(member_id);


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_user
    ADD CONSTRAINT fk_table1_tb_person1 FOREIGN KEY (person_id)
    REFERENCES "PeDeByteSchema".tb_person (id_person) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS tb_user_pkey
    ON "PeDeByteSchema".tb_user(person_id);


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_user
    ADD CONSTRAINT fk_tb_user_tb_login1 FOREIGN KEY (login_id)
    REFERENCES "PeDeByteSchema".tb_login (id_login) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS unique_login_id
    ON "PeDeByteSchema".tb_user(login_id);


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_user
    ADD CONSTRAINT fk_user_login FOREIGN KEY (login_id)
    REFERENCES "PeDeByteSchema".tb_login (id_login) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS unique_login_id
    ON "PeDeByteSchema".tb_user(login_id);


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_week_profile_has_tb_hours
    ADD CONSTRAINT fk_tb_week_profile_has_tb_hours_tb_hours1 FOREIGN KEY (hours_id)
    REFERENCES "PeDeByteSchema".tb_hours (id_hours) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_week_profile_has_tb_hours
    ADD CONSTRAINT fk_tb_week_profile_has_tb_hours_tb_week_profile FOREIGN KEY (week_profile_id)
    REFERENCES "PeDeByteSchema".tb_week_profile (id_week_profile) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;