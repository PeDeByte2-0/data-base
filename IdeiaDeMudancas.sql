-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_admin
(
    tb_user_tb_person_id_person integer NOT NULL,
    CONSTRAINT tb_admin_pkey PRIMARY KEY (tb_user_tb_person_id_person)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_available_time
(
    "Member_idMember" integer NOT NULL,
    "Member_tb_person_id_person" integer NOT NULL,
    tb_hours_id_hours integer NOT NULL,
    "Scheduled" boolean NOT NULL,
    CONSTRAINT tb_available_time_pkey PRIMARY KEY ("Member_idMember", "Member_tb_person_id_person", tb_hours_id_hours)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_hours
(
    id_hours integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 ),
    weekday character varying(45) COLLATE pg_catalog."default" NOT NULL,
    starttime character varying(45) COLLATE pg_catalog."default" NOT NULL,
    endtime character varying(45) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tb_hours_pkey PRIMARY KEY (id_hours)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_login
(
    idlogin integer NOT NULL,
    email character varying(60) COLLATE pg_catalog."default" NOT NULL,
    token character varying(45) COLLATE pg_catalog."default" NOT NULL,
    salt character varying(45) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tb_login_pkey PRIMARY KEY (idlogin)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_member
(
    tb_person_id_person integer NOT NULL,
    obs text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tb_member_pkey PRIMARY KEY (tb_person_id_person)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_necessity
(
    "tb_student_tb_idMember" integer NOT NULL,
    tb_speciality_idtb_speciality integer NOT NULL,
    CONSTRAINT tb_necessity_pkey PRIMARY KEY ("tb_student_tb_member_idMember", tb_speciality_idtb_speciality, tb_student_tb_member_tb_person_id_person)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_person
(
    id_person integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 ),
    active boolean NOT NULL,
    tb_school_id_school integer NOT NULL,
    CONSTRAINT tb_person_pkey PRIMARY KEY (id_person)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_person_data
(
    tb_person_id_person integer NOT NULL,
    first_name character varying(45) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(45) COLLATE pg_catalog."default" NOT NULL,
    cpf character varying(45) COLLATE pg_catalog."default" NOT NULL,
    celular character varying(45) COLLATE pg_catalog."default" NOT NULL
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_professional
(
    tb_member_tb_person_id_person integer NOT NULL,
    tb_speciality_idtb_speciality integer NOT NULL,
    CONSTRAINT tb_professional_pkey PRIMARY KEY (tb_member_tb_person_id_person)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_school
(
    id_school integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 ),
    tb_week_profile_id_week_profile integer NOT NULL,
    CONSTRAINT tb_school_pkey PRIMARY KEY (id_school, tb_week_profile_id_week_profile),
    CONSTRAINT tb_school_id_school_key UNIQUE (id_school)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_speciality
(
    idtb_speciality integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 ),
    name character varying(45) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tb_speciality_pkey PRIMARY KEY (idtb_speciality)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_student
(
    tb_member_tb_person_id_person integer NOT NULL,
    CONSTRAINT tb_student_pkey PRIMARY KEY (tb_member_tb_person_id_person)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_user
(
    tb_person_id_person integer NOT NULL,
    username character varying(45) COLLATE pg_catalog."default" NOT NULL,
    tb_login_idlogin integer NOT NULL,
    CONSTRAINT tb_user_pkey PRIMARY KEY (tb_person_id_person)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_week_profile
(
    id_week_profile integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 ),
    CONSTRAINT tb_week_profile_pkey PRIMARY KEY (id_week_profile)
);

CREATE TABLE IF NOT EXISTS "PeDeByteSchema".tb_week_profile_has_tb_hours
(
    tb_week_profile_id_week_profile integer NOT NULL,
    tb_hours_id_hours integer NOT NULL,
    CONSTRAINT tb_week_profile_has_tb_hours_pkey PRIMARY KEY (tb_week_profile_id_week_profile, tb_hours_id_hours)
);

ALTER TABLE IF EXISTS "PeDeByteSchema".tb_admin
    ADD CONSTRAINT fk_tb_admin_tb_user1 FOREIGN KEY (tb_user_tb_person_id_person)
    REFERENCES "PeDeByteSchema".tb_user (tb_person_id_person) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS tb_admin_pkey
    ON "PeDeByteSchema".tb_admin(tb_user_tb_person_id_person);


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_available_time
    ADD CONSTRAINT "fk_Member_has_tb_hours_Member1" FOREIGN KEY ("Member_tb_person_id_person")
    REFERENCES "PeDeByteSchema".tb_member (tb_person_id_person) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_available_time
    ADD CONSTRAINT "fk_Member_has_tb_hours_tb_hours1" FOREIGN KEY (tb_hours_id_hours)
    REFERENCES "PeDeByteSchema".tb_hours (id_hours) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_member
    ADD CONSTRAINT "fk_Member_tb_person1" FOREIGN KEY (tb_person_id_person)
    REFERENCES "PeDeByteSchema".tb_person (id_person) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS tb_member_pkey
    ON "PeDeByteSchema".tb_member(tb_person_id_person);


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_necessity
    ADD CONSTRAINT fk_tb_necessity_tb_student1 FOREIGN KEY (tb_student_tb_member_tb_person_id_person)
    REFERENCES "PeDeByteSchema".tb_student (tb_member_tb_person_id_person) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_necessity
    ADD CONSTRAINT fk_tb_student_has_tb_speciality_tb_speciality1 FOREIGN KEY (tb_speciality_idtb_speciality)
    REFERENCES "PeDeByteSchema".tb_speciality (idtb_speciality) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_person
    ADD CONSTRAINT fk_tb_person_tb_school1 FOREIGN KEY (tb_school_id_school)
    REFERENCES "PeDeByteSchema".tb_school (id_school) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_person_data
    ADD CONSTRAINT fk_tb_person_data_tb_person1 FOREIGN KEY (tb_person_id_person)
    REFERENCES "PeDeByteSchema".tb_person (id_person) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_professional
    ADD CONSTRAINT fk_tb_professional_tb_member1 FOREIGN KEY (tb_member_tb_person_id_person)
    REFERENCES "PeDeByteSchema".tb_member (tb_person_id_person) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS tb_professional_pkey
    ON "PeDeByteSchema".tb_professional(tb_member_tb_person_id_person);


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_professional
    ADD CONSTRAINT fk_tb_professional_tb_speciality1 FOREIGN KEY (tb_speciality_idtb_speciality)
    REFERENCES "PeDeByteSchema".tb_speciality (idtb_speciality) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_school
    ADD CONSTRAINT fk_tb_school_tb_week_profile1 FOREIGN KEY (tb_week_profile_id_week_profile)
    REFERENCES "PeDeByteSchema".tb_week_profile (id_week_profile) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_student
    ADD CONSTRAINT fk_tb_student_tb_member1 FOREIGN KEY (tb_member_tb_person_id_person)
    REFERENCES "PeDeByteSchema".tb_member (tb_person_id_person) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS tb_student_pkey
    ON "PeDeByteSchema".tb_student(tb_member_tb_person_id_person);


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_user
    ADD CONSTRAINT fk_table1_tb_person1 FOREIGN KEY (tb_person_id_person)
    REFERENCES "PeDeByteSchema".tb_person (id_person) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS tb_user_pkey
    ON "PeDeByteSchema".tb_user(tb_person_id_person);


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_user
    ADD CONSTRAINT fk_tb_user_tb_login1 FOREIGN KEY (tb_login_idlogin)
    REFERENCES "PeDeByteSchema".tb_login (idlogin) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_week_profile_has_tb_hours
    ADD CONSTRAINT fk_tb_week_profile_has_tb_hours_tb_hours1 FOREIGN KEY (tb_hours_id_hours)
    REFERENCES "PeDeByteSchema".tb_hours (id_hours) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "PeDeByteSchema".tb_week_profile_has_tb_hours
    ADD CONSTRAINT fk_tb_week_profile_has_tb_hours_tb_week_profile FOREIGN KEY (tb_week_profile_id_week_profile)
    REFERENCES "PeDeByteSchema".tb_week_profile (id_week_profile) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;